# Generated by Django 4.1.7 on 2023-03-30 15:40

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_company', models.BooleanField(default=False)),
                ('is_job_seeker', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='JobSeekerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=15000)),
                ('address', models.CharField(max_length=500)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('tax_id', models.PositiveBigIntegerField()),
                ('instagram', models.URLField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('profile_pic', models.ImageField(upload_to='user/jobseeker/profile/')),
                ('citizenship', models.ImageField(upload_to='user/jobseeker/identity')),
                ('passport', models.ImageField(blank=True, null=True, upload_to='user/jobseeker/identity')),
                ('driving_license', models.ImageField(blank=True, null=True, upload_to='user/jobseeker/identity')),
                ('cover_letter', models.FileField(upload_to='user/jobseeker/resume')),
                ('resume', models.FileField(upload_to='user/jobseeker/resume')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job_seeker_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=15000)),
                ('address', models.CharField(max_length=500)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('tax_id', models.PositiveBigIntegerField()),
                ('instagram', models.URLField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('company_name', models.CharField(max_length=255)),
                ('sector', models.CharField(blank=True, choices=[('Finance', 'Finance'), ('Investment', 'Investment'), ('Private Sector', 'Private Sector'), ('Manufacturing', 'Manufacturing'), ('Stock market', 'Stock market'), ('Legal Services', 'Legal Services'), ('Banking', 'Banking'), ('Social Work', 'Social Work'), ('Education', 'Education'), ('Retail', 'Retail'), ('Computers and information technology', 'Computers and information technology'), ('Insurance', 'Insurance'), ('Logistics', 'Logistics'), ('Marketing', 'Marketing'), ('Accounting', 'Accounting'), ('Telecommunications', 'Telecommunications'), ('Human Resources', 'Human Resources'), ('construction industry', 'construction industry'), ('Food industry', 'Food industry'), ('Customer Service', 'Customer Service'), ('Public Relations', 'Public Relations')], max_length=40, null=True)),
                ('type', models.CharField(choices=[('Private', 'Private'), ('Public', 'Public'), ('Non-Profit Distributing', 'Non-Profit Distributing')], max_length=30)),
                ('registeration_no', models.PositiveBigIntegerField()),
                ('pan', models.ImageField(upload_to='user/company/pan')),
                ('latitude', models.DecimalField(decimal_places=2, max_digits=20)),
                ('longitude', models.DecimalField(decimal_places=2, max_digits=20)),
                ('size', models.PositiveIntegerField()),
                ('date_of_establishment', models.DateField()),
                ('logo', models.ImageField(blank=True, null=True, upload_to='user/company/logo')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
